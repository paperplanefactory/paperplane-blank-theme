@mixin flex-wrap {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-ms-flex-wrap: wrap;
	flex-wrap: wrap;
}

@mixin define-flex-per-row($row_items) {
	-webkit-box-flex: 1;
	-ms-flex: 0 0 $row_items;
	flex: 0 0 $row_items;
}

@mixin flex-verticalize {
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
}

@mixin flex-end {
	-webkit-box-pack: end;
	-ms-flex-pack: end;
	justify-content: flex-end;
}

@mixin reset-button {
	padding: 0;
  margin: 0;
  cursor: pointer;
  border: none !important;
  background-color: transparent !important;
	line-height: normal;
	-webkit-appearance: none !important;
}

@mixin define-vertical-radient($top, $bottom){
	background: $top; /* Old browsers */
  background: -moz-linear-gradient(top,  $top 0%, $bottom 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$top), color-stop(100%,$bottom)); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top,  $top 0%,$bottom 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top,  $top 0%,$bottom 100%); /* Opera 11.10+ */
  background: -ms-linear-gradient(top,  $top 0%,$bottom 100%); /* IE10+ */
  background: linear-gradient(to bottom,  $top 0%,$bottom 100%); /* W3C */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#000000',GradientType=0 ); /* IE6-9 */
}

@mixin define-horizontal-radient($top, $bottom){
	background: $top; /* Old browsers */
  background: -moz-linear-gradient(left,  $top 0%, $bottom 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$top), color-stop(100%,$bottom)); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(left,  $top 0%,$bottom 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(left,  $top 0%,$bottom 100%); /* Opera 11.10+ */
  background: -ms-linear-gradient(left,  $top 0%,$bottom 100%); /* IE10+ */
  background: linear-gradient(to right,  $top 0%,$bottom 100%); /* W3C */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#000000',GradientType=1 ); /* IE6-9 */
}

@mixin define-diagonal-radient($top, $bottom){
	background: $top; /* Old browsers */
  background: -moz-linear-gradient(-45deg,  $top 0%, $bottom 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$top), color-stop(100%,$bottom)); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(-45deg,  $top 0%,$bottom 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(-45deg,  $top 0%,$bottom 100%); /* Opera 11.10+ */
  background: -ms-linear-gradient(-45deg,  $top 0%,$bottom 100%); /* IE10+ */
  background: linear-gradient(135deg,  $top 0%,$bottom 100%); /* W3C */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#66000000', endColorstr='#000000',GradientType=1 ); /* IE6-9 fallback on horizontal gradient */
}

@mixin define-border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}

@mixin define-paddings($top, $right, $bottom, $left) {
	padding-top: $top;
	padding-right: $right;
	padding-bottom: $bottom;
	padding-left: $left;
}

@mixin define-margins($top, $right, $bottom, $left) {
	margin-top: $top;
	margin-right: $right;
	margin-bottom: $bottom;
	margin-left: $left;
}

@mixin define-lazy-blur($blur_me) {
	filter: blur($blur_me);
  -webkit-filter: blur($blur_me);
  -moz-filter: blur($blur_me);
  -o-filter: blur($blur_me);
  -ms-filter: blur($blur_me);
}

@mixin define-basic-transition($effet_affected, $effect_duration) {
	-webkit-transition: $effet_affected $effect_duration ease-in-out;
	-moz-transition: $effet_affected $effect_duration ease-in-out;
	-o-transition: $effet_affected $effect_duration ease-in-out;
	-ms-transition: $effet_affected $effect_duration ease-in-out;
	transition: $effet_affected $effect_duration ease-in-out;
}

@mixin define-transform($transforms) {
	-webkit-transform: $transforms;
	-moz-transform: $transforms;
	-ms-transform: $transforms;
	transform: $transforms;
}

// Rotate
@mixin define-rotate ($deg) {
	@include define-transform(rotate(#{$deg}deg));
}

// Scale
@mixin define-scale($scale) {
	@include define-transform(scale($scale));
}

// Translate
@mixin define-translate ($x, $y) {
	@include define-transform(translate($x, $y));
}

// Skew
@mixin define-skew ($x, $y) {
	@include define-transform(skew(#{$x}deg, #{$y}deg));
}
